{"version":3,"sources":["./src/app/location/location.page.html","./src/app/location/location-routing.module.ts","./src/app/location/location.module.ts","./src/app/location/location.page.scss","./src/app/location/location.page.ts"],"names":[],"mappings":"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","file":"location-location-module.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <img src=\\\"assets/img/Arrow.svg\\\" (click)=\\\"goToHome()\\\">\\n    </ion-buttons>\\n    <ion-title>Set Route</ion-title>\\n   </ion-toolbar>\\n</ion-header>\\n<!--ion-content class=\\\"location-page\\\">\\n  <ion-searchbar [(ngModel)]=\\\"userAddress\\\" mode=\\\"ios\\\" animated placeholder=\\\"Enter your  address\\\" (ionInput)=\\\"UpdateSearchResults()\\\" (ionClear)=\\\"ClearAutocomplete()\\\">\\n  </ion-searchbar>\\n  <ion-list [hidden]=\\\"autocompleteItems.length == 0\\\">\\n    <ion-item lines=\\\"full\\\" style=\\\"--padding-top: 4px; --padding-bottom: 4px;\\\" *ngFor=\\\"let item of autocompleteItems\\\" button=\\\"true\\\" (click)=\\\"SelectSearchResult(item.description)\\\">\\n      <ion-label><h2>{{ item.description }}</h2></ion-label>\\n    </ion-item>\\n  </ion-list>\\n  <div class=\\\"map-wrapper\\\">\\n    <div id=\\\"map_center\\\">\\n      <img src=\\\"assets/img/pin.png\\\" style=\\\"width: 55%;\\\"/>\\n    </div>\\n    <div #map id=\\\"map\\\"></div>\\n  </div>\\n</ion-content>\\n\\n<ion-footer>\\n    <p style=\\\"margin-left: 15px;margin-bottom: 0px;\\\" *ngIf=\\\"pAdress\\\">{{pAdress}}</p>\\n    <ion-button color=\\\"success\\\" expand=\\\"full\\\" (click)=\\\"apply()\\\" [disabled]=\\\"btnApply\\\">Deliver here</ion-button>\\n</ion-footer-->\\n<ion-content>\\n    <ion-row class=\\\"list_1\\\">\\n\\n    <ion-col size=\\\"12\\\">\\n      <ion-input  class=\\\"input_list\\\" [(ngModel)]=\\\"source\\\" (ionInput)=\\\"UpdateSearchResults()\\\" placeholder=\\\"Pickup\\\"></ion-input>\\n      <span *ngIf=\\\"showSourceError\\\" class=\\\"error ion-padding\\\">\\n        pickup location is required.\\n      </span>\\n      <ion-list [hidden]=\\\"autocompleteItems.length == 0\\\">\\n        <ion-item lines=\\\"full\\\" style=\\\"--padding-top: 4px; --padding-bottom: 4px;\\\" *ngFor=\\\"let item of autocompleteItems\\\" button=\\\"true\\\" (click)=\\\"SelectSearchResult(item.description)\\\">\\n          <ion-label><h2>{{ item.description }}</h2></ion-label>\\n        </ion-item>\\n      </ion-list>\\n    </ion-col>\\n\\n    <ion-col size=\\\"12\\\">\\n      <ion-input class=\\\"input_list\\\" placeholder=\\\"Drop off\\\" [(ngModel)]=\\\"destination\\\" (ionInput)=\\\"UpdateDestinationResults()\\\"></ion-input>\\n      <span *ngIf=\\\"showDestinationError\\\" class=\\\"error ion-padding\\\">\\n        dropoff location is required.\\n      </span>\\n      <ion-list [hidden]=\\\"detinationCompleteItems.length == 0\\\">\\n        <ion-item lines=\\\"full\\\" style=\\\"--padding-top: 4px; --padding-bottom: 4px;\\\" *ngFor=\\\"let item of detinationCompleteItems\\\" button=\\\"true\\\" (click)=\\\"SelectDestinationResult(item.description)\\\">\\n          <ion-label><h2>{{ item.description }}</h2></ion-label>\\n        </ion-item>\\n      </ion-list>\\n    </ion-col>\\n    <ion-col size=\\\"6\\\">\\n      <ion-button color=\\\"primary\\\" expand=\\\"block\\\" shape=\\\"round\\\"  (click)=\\\"calculateAndDisplayRoute()\\\">Show Route</ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"6\\\">\\n      <ion-button color=\\\"secondary\\\" expand=\\\"block\\\" shape=\\\"round\\\"  (click)=\\\"backToList()\\\">Get Route</ion-button>\\n    </ion-col>\\n  </ion-row>\\n  <div #mapElement class=\\\"map\\\"></div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LocationPage } from './location.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LocationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LocationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LocationPageRoutingModule } from './location-routing.module';\n\nimport { LocationPage } from './location.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LocationPageRoutingModule\n  ],\n  declarations: [LocationPage]\n})\nexport class LocationPageModule {}\n","export default \"ion-toolbar {\\n  padding: 0.8em 0.1em 0 0;\\n  --background: #c4932f;\\n}\\n\\n@media only screen and (min-height: 800px) {\\n  ion-toolbar {\\n    padding: 3em 0.1em 8px 0;\\n    --background: #c4932f;\\n  }\\n}\\n\\nion-title {\\n  text-align: center;\\n  color: #fff;\\n  font-size: 24px;\\n}\\n\\n.map {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\nion-list {\\n  position: relative;\\n  width: 100%;\\n  z-index: 9999;\\n}\\n\\n.error {\\n  color: red;\\n  padding: 0px;\\n}\\n\\n.input_list {\\n  border: 1px solid #d4dce1;\\n  background: #F7F8FA;\\n  border-radius: 28px;\\n  font-size: 13px;\\n  color: #000;\\n  --placeholder-color: #b2b2b4;\\n  --padding-bottom: 1.5em;\\n  --padding-start: 1.5em;\\n  --padding-top: 1.5em;\\n}\\n\\nion-item {\\n  margin: 1em 0em;\\n}\\n\\n.list_1 {\\n  padding: 1em 1em;\\n}\\n\\nion-button {\\n  --padding-bottom: 1.5em;\\n  --padding-top: 1.5em;\\n  --box-shadow: none;\\n}\\n\\n/*.location-page{ \\n\\n    #map_canvas {\\n        width: 90%;\\n        height: 80%;\\n        border: 1px solid red;\\n    }\\n    #address {\\n      padding: 10px;\\n      font-size: 18px;\\n      font-weight: bold;\\n    }\\n    #map {\\n      width: 100%;\\n      height: 73vh;\\n    }\\n    .map-wrapper {\\n      position: relative;\\n      #map_center {\\n        position: absolute;\\n        z-index: 99;\\n        height: 40px;\\n        width: 40px;\\n        top: 50%;\\n        left: 50%;\\n        margin-left: -21px;\\n        margin-top: -41px;\\n      }\\n    }\\n\\n    .name-section{\\n      text-align: center;\\n      margin: 30px 0;\\n      h1{\\n        font-size: 25px;\\n        text-transform: uppercase;\\n        color: var(--ion-color-primary);\\n        font-weight: bold;\\n      }\\n      h4{\\n        font-size: 14px;\\n      }\\n    }\\n\\n    .current-location{\\n      padding: 0px;\\n      ion-icon{\\n        margin-right: 5px;\\n      }\\n      .button{\\n        margin-bottom: 20px;\\n      }\\n      .location_button{\\n        font-size: 12px;\\n      }\\n    }\\n\\n    .account{\\n      margin-bottom: 30px;\\n      .sign-in-button{\\n        text-align: center;\\n      }\\n\\n      .sign-up-button{\\n        text-align: center;\\n        margin-top: 20px;\\n      } \\n    }\\n\\n    ion-searchbar{\\n      padding: 0 20px;\\n    }\\n\\n    .searchbar-input.sc-ion-searchbar-md {\\n      border: 1px solid #fff !important;\\n    }\\n    .searchbar-search-icon{\\n      display: none;\\n    }\\n}*/\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9jYXRpb24vbG9jYXRpb24ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usd0JBQUE7RUFDQSxxQkFBQTtBQUNGOztBQUVBO0VBQ0U7SUFDSSx3QkFBQTtJQUNBLHFCQUFBO0VBQ0o7QUFDRjs7QUFFQTtFQUNFLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7QUFBRjs7QUFFQTtFQUNJLFdBQUE7RUFDQSxZQUFBO0FBQ0o7O0FBQ0E7RUFDRSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxhQUFBO0FBRUY7O0FBQ0E7RUFDRSxVQUFBO0VBQ0EsWUFBQTtBQUVGOztBQUNBO0VBQ0UseUJBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLFdBQUE7RUFDQSw0QkFBQTtFQUNBLHVCQUFBO0VBQ0Esc0JBQUE7RUFDQSxvQkFBQTtBQUVGOztBQUFBO0VBQ0UsZUFBQTtBQUdGOztBQURBO0VBQ0UsZ0JBQUE7QUFJRjs7QUFGQTtFQUNFLHVCQUFBO0VBQ0Esb0JBQUE7RUFDQSxrQkFBQTtBQUtGOztBQUhBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBQUEiLCJmaWxlIjoic3JjL2FwcC9sb2NhdGlvbi9sb2NhdGlvbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tdG9vbGJhciB7XG4gIHBhZGRpbmc6IDAuOGVtIDAuMWVtIDAgMDtcbiAgLS1iYWNrZ3JvdW5kOiAjYzQ5MzJmO1xufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kKG1pbi1oZWlnaHQgOiA4MDBweCkge1xuICBpb24tdG9vbGJhciB7XG4gICAgICBwYWRkaW5nOiAzZW0gMC4xZW0gOHB4IDA7XG4gICAgICAtLWJhY2tncm91bmQ6ICNjNDkzMmY7XG4gIH1cbn1cblxuaW9uLXRpdGxle1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXNpemU6IDI0cHg7XG59XG4ubWFwe1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbn1cbmlvbi1saXN0e1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xuICB6LWluZGV4OiA5OTk5O1xufVxuXG4uZXJyb3J7XG4gIGNvbG9yOiByZWQ7XG4gIHBhZGRpbmc6IDBweDtcbn1cblxuLmlucHV0X2xpc3R7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkNGRjZTE7XG4gIGJhY2tncm91bmQ6ICNGN0Y4RkE7XG4gIGJvcmRlci1yYWRpdXM6IDI4cHg7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgY29sb3I6ICMwMDA7XG4gIC0tcGxhY2Vob2xkZXItY29sb3I6ICNiMmIyYjQ7XG4gIC0tcGFkZGluZy1ib3R0b206IDEuNWVtO1xuICAtLXBhZGRpbmctc3RhcnQ6IDEuNWVtO1xuICAtLXBhZGRpbmctdG9wOiAxLjVlbTtcbn1cbmlvbi1pdGVte1xuICBtYXJnaW46IDFlbSAwZW07XG59XG4ubGlzdF8xe1xuICBwYWRkaW5nOiAxZW0gMWVtO1xufVxuaW9uLWJ1dHRvbntcbiAgLS1wYWRkaW5nLWJvdHRvbTogMS41ZW07XG4gIC0tcGFkZGluZy10b3A6IDEuNWVtO1xuICAtLWJveC1zaGFkb3c6IG5vbmU7XG59XG4vKi5sb2NhdGlvbi1wYWdleyBcblxuICAgICNtYXBfY2FudmFzIHtcbiAgICAgICAgd2lkdGg6IDkwJTtcbiAgICAgICAgaGVpZ2h0OiA4MCU7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcbiAgICB9XG4gICAgI2FkZHJlc3Mge1xuICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIH1cbiAgICAjbWFwIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiA3M3ZoO1xuICAgIH1cbiAgICAubWFwLXdyYXBwZXIge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgI21hcF9jZW50ZXIge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHotaW5kZXg6IDk5O1xuICAgICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICAgIHdpZHRoOiA0MHB4O1xuICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICBtYXJnaW4tbGVmdDogLTIxcHg7XG4gICAgICAgIG1hcmdpbi10b3A6IC00MXB4O1xuICAgICAgfVxuICAgIH1cblxuICAgIC5uYW1lLXNlY3Rpb257XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBtYXJnaW46IDMwcHggMDtcbiAgICAgIGgxe1xuICAgICAgICBmb250LXNpemU6IDI1cHg7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgfVxuICAgICAgaDR7XG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuY3VycmVudC1sb2NhdGlvbntcbiAgICAgIHBhZGRpbmc6IDBweDtcbiAgICAgIGlvbi1pY29ue1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgICAgIH1cbiAgICAgIC5idXR0b257XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgICB9XG4gICAgICAubG9jYXRpb25fYnV0dG9ue1xuICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIC5hY2NvdW50e1xuICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgICAgIC5zaWduLWluLWJ1dHRvbntcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgfVxuICBcbiAgICAgIC5zaWduLXVwLWJ1dHRvbntcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgICAgfSBcbiAgICB9XG5cbiAgICBpb24tc2VhcmNoYmFye1xuICAgICAgcGFkZGluZzogMCAyMHB4O1xuICAgIH1cblxuICAgIC5zZWFyY2hiYXItaW5wdXQuc2MtaW9uLXNlYXJjaGJhci1tZCB7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmICFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIC5zZWFyY2hiYXItc2VhcmNoLWljb257XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbn0qLyJdfQ== */\";","import { Component, ElementRef, NgZone, OnInit, ViewChild } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Geolocation, GeolocationOptions, Geoposition, PositionError } from '@ionic-native/geolocation/ngx';\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\nimport { ToastController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\ndeclare var google;\n@Component({\n  selector: 'app-location',\n  templateUrl: './location.page.html',\n  styleUrls: ['./location.page.scss'],\n})\nexport class LocationPage implements OnInit {\n  response: any;\n  autocomplete: { input: string; };\n  autocompleteItems: any[];\n  detinationCompleteItems : any[];\n  location: any;\n  placeid: any;\n  GoogleAutocomplete: any;\n  options: GeolocationOptions;\n  geoOptions: NativeGeocoderOptions;\n  @ViewChild('map', { static: true }) mapElement: ElementRef;\n  map: any = {};\n  userAddress: any = '';\n  latitude: number;\n  longitude: number;\n  latitudeString: string;\n  longitudeString: string;\n  get_country: any;\n  btnApply :boolean = true;\n  address: string ='';\n  pAdress: string;\n  errorMsg: string;\n  @ViewChild('mapElement') mapNativeElement: ElementRef;\n  directionsService = new google.maps.DirectionsService;\n  directionsDisplay = new google.maps.DirectionsRenderer;\n  directionForm: FormGroup;\n  source:any;\n  destination:any;\n  showSourceError: boolean;\n  showDestinationError: boolean;\n  back: any;\n  constructor(private storage: Storage,\n    private fb: FormBuilder,\n    public activatedRoute:ActivatedRoute,\n    private tc: ToastController,\n    private geolocation: Geolocation,\n    private nativeGeocoder: NativeGeocoder,\n    public zone: NgZone,\n    private router: Router,) { \n      this.activatedRoute.queryParams.subscribe((res)=>{\n        \n        this.response = JSON.parse(res.value);\n        console.log(this.response);\n        this.back = this.response.location;\n      \n    });\n    this.GoogleAutocomplete = new google.maps.places.AutocompleteService();\n    this.autocomplete = { input: '' };\n    this.autocompleteItems = [];\n    this.detinationCompleteItems = [];\n  }\n\n  ngOnInit() {\n    //this.loadMap();\n  }\n  goToHome(){\n    this.router.navigate([this.back]);\n  }\n  backToList(){\n    this.showSourceError = false;\n    this.showDestinationError = false;\n    if(this.source == '' || this.source == undefined ){\n        this.showSourceError = true;\n        return false;\n    }else if(this.destination == '' || this.destination == undefined){\n        this.showDestinationError = true;\n        return false;\n    }\n    this.getpickuplatlog(this.source);\n    this.getdropofflatlog(this.destination);\n    this.storage.set('pickup', this.source);\n    this.storage.set('dropoff', this.destination);\n    \n    this.router.navigate([this.back]);\n    \n  }\n  ngAfterViewInit(): void {\n    const map = new google.maps.Map(this.mapNativeElement.nativeElement, {\n      zoom: 7,\n      center: {lat: 41.85, lng: -87.65}\n    });\n    this.directionsDisplay.setMap(map);\n  }\n  calculateAndDisplayRoute() {\n    this.showSourceError = false;\n    this.showDestinationError = false;\n    if(this.source == '' || this.source == undefined ){\n        this.showSourceError = true;\n        return false;\n    }else if(this.destination == '' || this.destination == undefined){\n        this.showDestinationError = true;\n        return false;\n    }\n    const that = this;\n    this.directionsService.route({\n      origin: this.source,\n      destination: this.destination,\n      travelMode: 'DRIVING'\n    }, (response, status) => {\n      console.log(response);\n      if (status === 'OK') {\n        that.directionsDisplay.setDirections(response);\n      } else {\n        window.alert('Directions request failed due to ' + status);\n      }\n    });\n  }\n\n  UpdateSearchResults() {\n    if (this.source == '') {\n      this.autocompleteItems = [];\n      return;\n    }\n    //componentRestrictions: {country: 'AE'}\n    this.GoogleAutocomplete.getPlacePredictions({ input: this.source },\n      (predictions, status) => {\n        this.autocompleteItems = [];\n        this.zone.run(() => {\n          predictions.forEach((prediction) => {\n            console.log(prediction);\n            this.autocompleteItems.push(prediction);\n\n          });\n        });\n      });\n  }\n  SelectSearchResult(address) {\n    this.source = address;//May be delete\n    console.log(this.source);\n    this.autocompleteItems = []\n  }\n  UpdateDestinationResults(){\n    if (this.destination == '') {\n      this.detinationCompleteItems = [];\n      return;\n    }\n    //componentRestrictions: {country: 'AE'}\n    this.GoogleAutocomplete.getPlacePredictions({ input: this.destination },\n      (predictions, status) => {\n        this.detinationCompleteItems = [];\n        this.zone.run(() => {\n          predictions.forEach((prediction) => {\n            console.log(prediction);\n            this.detinationCompleteItems.push(prediction);\n\n          });\n        });\n      });\n  }\n  SelectDestinationResult(address) {\n    this.destination = address;//May be delete\n    console.log(this.destination);\n    this.detinationCompleteItems = []\n    \n  }\n  getpickuplatlog(address) {\n    let options: NativeGeocoderOptions = {\n      useLocale: true,\n      maxResults: 5\n    };\n    this.nativeGeocoder.forwardGeocode(address)\n      .then((result: NativeGeocoderResult[]) => {\n       \n        console.log(result[0].latitude,result[0].longitude);\n        this.storage.set('pickuplong', result[0].longitude);\n        this.storage.set('pickuplat', result[0].latitude);\n      }).catch((error: any) => {\n        this.errorMsg = JSON.stringify(error);\n        console.log(this.errorMsg);\n        \n      });\n  }\n  getdropofflatlog(address) {\n    let options: NativeGeocoderOptions = {\n      useLocale: true,\n      maxResults: 5\n    };\n    this.nativeGeocoder.forwardGeocode(address)\n      .then((result: NativeGeocoderResult[]) => {\n       \n        console.log(result[0].latitude,result[0].longitude);\n        this.storage.set('dropofflong', result[0].longitude);\n        this.storage.set('dropofflat', result[0].latitude);\n      }).catch((error: any) => {\n        this.errorMsg = JSON.stringify(error);\n        console.log(this.errorMsg);\n        \n      });\n  }\n    \n    \n /* loadMap() {\n    this.geolocation.getCurrentPosition().then((resp) => {\n    \n          this.latitude = resp.coords.latitude;\n          this.longitude = resp.coords.longitude;\n          console.log('dosri condition',this.latitude,this.longitude);\n          this.changemap(this.latitude,this.longitude);\n        \n    }).catch((error) => {\n      console.log('Error getting location', error);\n    });\n  }\n\n  currentLoadUserMap(){\n    this.geolocation.getCurrentPosition().then((resp) => {\n    this.latitude = resp.coords.latitude;\n    this.longitude = resp.coords.longitude;\n    this.getLocationAdddress();\n  }).catch((error) => {\n    console.log('Error getting location', error);\n  });\n}\ngetLocationAdddress() {\n  let options: NativeGeocoderOptions = {\n      useLocale: true,\n      maxResults: 5\n  };\n  this.nativeGeocoder.reverseGeocode(this.latitude, this.longitude, options)\n    .then((result: NativeGeocoderResult[]) => {\n      console.log(JSON.stringify(result));\n      this.address = result[0].subLocality + ' ' + result[0].subAdministrativeArea;\n     // this.modalCtrl.dismiss({update: true});\n      }).catch((error: any) => {\n          console.log(error);\n       //   this.modalCtrl.dismiss({update: true});\n   });\n}\n  changemap(lat,long){\n    console.log('change map',lat,long);\n   // this.service.userLocation.latitude = lat;\n//this.service.userLocation.longitude = long;\n\n    let latLng = new google.maps.LatLng(lat, long);\n    let mapOptions = {\n      center: latLng,\n      zoom: 15,\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    }\n\n    this.getAddressFromCoords(lat, long);\n\n    this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\n    this.autocompleteItems = [];\n   // this.storage.set('userLocation', this.service.userLocation);\n   // console.log(this.service.userLocation);\n    this.map.addListener('dragend', () => {\n\n      this.latitude = this.map.center.lat();\n      this.longitude = this.map.center.lng();\n      //console.log(this.latitude,this.longitude);\n     \n     this.getAddressFromCoords(this.map.center.lat(), this.map.center.lng())\n      \n    });\n  }\n\n  getAddressFromCoords(lattitude, longitude) {\n    console.log(\"get Address From Coords \" + lattitude + \" \" + longitude);\n    let options: NativeGeocoderOptions = {\n      useLocale: true,\n      maxResults: 5\n    };\n\n    this.nativeGeocoder.reverseGeocode(lattitude, longitude, options)\n      .then((result: NativeGeocoderResult[]) => {\n        console.log('add:---'+result[0]);\n        this.address = \"\";\n        let responseAddress = [];\n        for (let [key, value] of Object.entries(result[0])) {\n          if (value.length > 0)\n            responseAddress.push(value);\n\n        }\n        responseAddress.reverse();\n        for (let value of responseAddress) {\n          this.address += value + \", \";\n        }\n        this.address = this.address.slice(0, -2);\n        console.log('address1'+this.address);\n        this.pAdress = this.address;\n        this.lastwordString(this.address);\n       \n        \n      \n        \n      })\n      .catch((error: any) => {\n        this.address = \"Address Not Available!\";\n        console.log('address2'+this.address);\n      });\n\n      \n  }\n  lastwordString(string){\n    console.log(string.split(\" \").splice(-1));\n    this.get_country= string.split(\" \").splice(-1);\n    if(this.get_country[0] == \"AE\"){\n      this.btnApply = false;\n    }else{\n      this.btnApply = true;\n      this.presentToast();\n    }\n  }\n  \n  UpdateSearchResults() {\n    if (this.userAddress == '') {\n      this.autocompleteItems = [];\n      return;\n    }\n    this.GoogleAutocomplete.getPlacePredictions({ input: this.userAddress ,componentRestrictions: {country: 'AE'}},\n      (predictions, status) => {\n        this.autocompleteItems = [];\n        this.zone.run(() => {\n          predictions.forEach((prediction) => {\n            console.log(prediction);\n            this.autocompleteItems.push(prediction);\n          });\n        });\n      });\n  }\n  SelectSearchResult(address) {\n      this.userAddress = address;//May be delete\n      this.btnApply = false;\n     // this.service.userLocation.address = address;\n      this.pAdress = address;\n      this.getCoordsFromAddress(address);\n     // this.storage.set('userLocation', this.service.userLocation);\n  }\n\n  getCoordsFromAddress(address) {\n    let options: NativeGeocoderOptions = {\n      useLocale: true,\n      maxResults: 5\n    };\n    this.nativeGeocoder.forwardGeocode(address)\n      .then((result: NativeGeocoderResult[]) => {\n       \n        this.changemap(result[0].latitude,result[0].longitude);\n        //this.modalCtrl.dismiss({update: true});\n      }).catch((error: any) => {\n        this.errorMsg = JSON.stringify(error);\n        console.log(this.errorMsg);\n        this.userAddress = \"\";\n       // this.service.userLocation.latitude = '';\n        //this.service.userLocation.longitude = '';\n        //this.modalCtrl.dismiss({update: true});\n      });\n  }\n  ClearAutocomplete() {\n    this.autocompleteItems = []\n  }\n  async presentToast() {\n    const toast = await this.tc.create({\n      message: 'We Cannot deliver in this area.',\n      duration: 2000,\n      position: 'top',\n      buttons: [\n         {\n          text: 'cancel',\n          role: 'cancel',\n          handler: () => {\n            console.log('Cancel clicked');\n          }\n        }\n      ]\n    });\n    toast.present();\n  }*/\n}\n"],"sourceRoot":"webpack:///"}