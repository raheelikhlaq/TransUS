{"version":3,"sources":["./src/app/flutter-waves/flutter-waves-routing.module.ts","./src/app/flutter-waves/flutter-waves.module.ts","./src/app/flutter-waves/flutter-waves.page.scss","./src/app/flutter-waves/flutter-waves.page.ts"],"names":[],"mappings":"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","file":"flutter-waves-flutter-waves-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { FlutterWavesPage } from './flutter-waves.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FlutterWavesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FlutterWavesPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { FlutterWavesPageRoutingModule } from './flutter-waves-routing.module';\r\n\r\nimport { FlutterWavesPage } from './flutter-waves.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    FlutterWavesPageRoutingModule\r\n  ],\r\n  declarations: [FlutterWavesPage]\r\n})\r\nexport class FlutterWavesPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZsdXR0ZXItd2F2ZXMvZmx1dHRlci13YXZlcy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Route, Router } from '@angular/router';\r\nimport { ToastController, LoadingController, MenuController } from '@ionic/angular';\r\nimport { Storage } from '@ionic/storage';\r\nimport { AsyncPaymentOptions, Flutterwave, PaymentSuccessResponse } from 'flutterwave-angular-v3';\r\nimport { RestService } from '../rest.service';\r\n\r\n@Component({\r\n  selector: 'app-flutter-waves',\r\n  // templateUrl: './flutter-waves.page.html',\r\n  template:  ` <button (click)=\"payViaPromise()\" >Pay via Promise </button>`,\r\n  styleUrls: ['./flutter-waves.page.scss'],\r\n})\r\nexport class FlutterWavesPage implements OnInit {\r\n\r\n  constructor(public toastController:ToastController,\r\n\r\n    private flutterwave: Flutterwave,\r\n\r\n    public loadingController: LoadingController,private storage: Storage,\r\n    public restService:RestService,public activatedRoute:ActivatedRoute,\r\n    public router:Router,public menuCtrl: MenuController) { }\r\n    response: any;\r\n    booking_details: any;\r\n    base_url: any;\r\n    booking_id:any;\r\n    trip_cost:number=77;\r\n    wallet_amount:any\r\n    userID:any;\r\n    Email:any;\r\n    name:any;\r\n    date:any='';\r\n\r\n    publicKey = \"FLWPUBK_TEST-24a82587c83dda8d3c3a9ea64dd6e405-X\";\r\n \r\n    customerDetails = { name: '', email: '', phone_number: ''}\r\n     \r\n    customizations = {title: 'TransUS', description: 'Pay now for confrim your booking', logo: 'https://flutterwave.com/images/logo-colored.svg'}\r\n   \r\n    meta = {'counsumer_id': '7898', 'consumer_mac': 'kjs9s8ss7dd'}\r\n  \r\n\r\n    paymentData : AsyncPaymentOptions = {\r\n      public_key: this.publicKey,\r\n      tx_ref: this.generateReference(),\r\n      amount: this.trip_cost,\r\n      currency: 'NGN',\r\n      payment_options: 'card',\r\n      meta: this.meta,\r\n      customer: this.customerDetails,\r\n      customizations: this.customizations,\r\n     }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.queryParams.subscribe((res)=>{\r\n      this.response = JSON.parse(res.value);\r\n      console.log(this.response);\r\n      this.booking_details =  this.response.booking_details;\r\n      this.trip_cost = parseInt(this.booking_details.trip_cost);\r\n      this.booking_id = this.booking_details.bookings_id;\r\n      console.log(this.trip_cost);\r\n      this.storage.get('user_details').then((user_details) => {\r\n        console.log(user_details);\r\n        this.wallet_amount = user_details.wallet_amount;\r\n        this.userID = user_details.users_id;\r\n          this.Email = user_details.email;\r\n          this.name = user_details.user_name\r\n\r\n          this.customerDetails.name = this.name;\r\n          this.customerDetails.email = this.Email;\r\n          this.date = new Date();\r\n           this.date.getTime().toString();\r\n          console.log(this.customerDetails)\r\n\r\n      });\r\n      /*var date1 = new Date(this.booking_details.start_date); \r\n      var date2 = new Date(this.booking_details.end_date);\r\n      var Difference_In_Time = date2.getTime() - date1.getTime(); \r\n  \r\n      // To calculate the no. of days between two dates \r\n      var Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24); \r\n        console.log('dieffernce in days: '+Difference_In_Days);*/\r\n  });\r\n  }\r\n  getRespo:any;\r\n  payViaPromise() {\r\n    this.flutterwave.asyncInlinePay(this.paymentData).then(\r\n      (response) =>{\r\n        console.log(\"Promise Res line 88\" , response)\r\n        this.getRespo = response;\r\n        this.flutterwave.closePaymentModal(5);\r\n        if(this.getRespo.status == \"successful\"){\r\n\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  makePaymentCallback(response: PaymentSuccessResponse): void {\r\n    console.log(\"Pay\", response);\r\n    this.flutterwave.closePaymentModal(5)\r\n  }\r\n  closedPaymentModal(): void {\r\n    console.log('payment is closed');\r\n  }\r\n  generateReference(): string {\r\n    let date = new Date();\r\n    return date.getTime().toString();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}